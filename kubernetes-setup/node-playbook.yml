---
- hosts: all
  become: true
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for Libcontainers
    apt_key:
      url: https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_22.04/Release.key
      state: present

  - name: Add an apt signing key for CRI-O
    apt_key:
      url: https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.24/xUbuntu_22.04/Release.key
      state: present

  - name: Adding apt repository for Libcontainers
    apt_repository:
      repo: deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/xUbuntu_22.04/ /
      state: present
      filename: devel:kubic:libcontainers:stable.list

  - name: Adding apt repository for CRI-O
    apt_repository:
      repo: deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/1.24/xUbuntu_22.04/ /
      state: present
      filename: devel:kubic:libcontainers:stable:cri-o:1.24.list

  - name: Install CRI-O Packages
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - cri-o
        - cri-o-runc

  - name: Start CRI-o
    service:
      name: crio
      daemon_reload: yes
      state: started

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list
  
  - name: K8S Modules Conf
    copy:
      dest: "/etc/modules-load.d/k8s.conf"
      content: |
        overlay
        br_netfilter

  - name: Modprobe
    command: |
        modprobe overlay

  - name: Modprobe Netfilter
    command: |
        modprobe br_netfilter

  - name: K8S Sysctl Conf
    copy:
      dest: "/etc/sysctl.d/k8s.conf"
      content: |
        net.bridge.bridge-nf-call-iptables  = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        net.ipv4.ip_forward                 = 1

  - name: Sysctl
    command: |
        sysctl --system

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet
        - kubeadm
        - kubectl

  - name: Create Kubelet Etc file
    command: touch /etc/default/kubelet

  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted
 
  - name: Copy the join command to server location
    copy: src=join-command dest=/tmp/join-command.sh mode=0777

  - name: Join the node to cluster
    command: sh /tmp/join-command.sh

  handlers:
    - name: kublet status
      service: name=kubelet state=started
